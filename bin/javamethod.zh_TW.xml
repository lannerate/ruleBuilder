<?xml version="1.0" encoding="UTF-8"?>
<MethodInfos displayName="java">
 <GlobalMethod funcName="now()" disName="當前時間" returnType="datetime" typeName="日期處理">
  <funcBody>
DateUtil.now() </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="exceptionmessage()" disName="異常信息" returnType="string" typeName="系統支持">
  <funcBody>
e.getMessage() </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="left(string,int)" disName="從{string}左側截取{int}個字符" returnType="string" typeName="字符截取">
  <funcBody>
com.flagleader.util.GCPub.stringLeft({string},{int}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="stringRight(string,int)" disName="從{string}右側截取{int}個字符" returnType="string" typeName="字符截取">
  <funcBody>
com.flagleader.util.GCPub.stringRight({string},{int}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="stringStart(string,int)" disName="從{string}的{int}位開始的字符串" returnType="string" typeName="字符截取">
  <funcBody>
com.flagleader.util.GCPub.stringStart({string},{int}) </funcBody>
 </GlobalMethod>
<GlobalMethod funcName="minusRightString(string,int)" disName="去掉{string}中最後{int}位的字符串" returnType="string" typeName="字符截取">
  <funcBody>
com.flagleader.util.StringUtil.minusRightString({string},{int}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="middle(int,int)" disName="取{string}中間從{int}到{int}的字符" returnType="string" typeName="字符截取">
  <funcBody>
com.flagleader.util.StringUtil.substring({string},{int},{int}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="round(double)" disName="四捨五入{double}" returnType="long" typeName="數值處理">
  <funcBody>
MathUtil.round({double}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="round(float)" disName="四捨五入{float}" returnType="int" typeName="數值處理">
  <funcBody>
MathUtil.round({float}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="abs(double)" disName="取{double}的絕對值" returnType="double" typeName="數值處理">
  <funcBody>
MathUtil.abs({double}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="max(double,double)" disName="取{double}和{double}中的最大值" returnType="double" typeName="數值比較">
  <funcBody>
MathUtil.max({double},{double}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="min(double,double)" disName="取{double}和{double}中的最小值" returnType="double" typeName="數值比較">
  <funcBody>
MathUtil.min({double},{double}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="random()" disName="隨機數值" returnType="double" typeName="數值處理">
  <funcBody>
MathUtil.random() </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="monthdays" disName="取{int}年{int}月的天數" returnType="int" typeName="日期處理">
  <funcBody>
DateUtil.getCurMonthDays({int},{int}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="d​​ateAdd" disName="取{date}的後{int}天" returnType="date" typeName="日期處理">
  <funcBody>
DateUtil.dateAdd({date},{int}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="d​​ateMinus" disName="取{date}的前{int}天" returnType="date" typeName="日期處理">
  <funcBody>
DateUtil.dateMinus({date},{int}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="parseInt(string)" disName="轉換{string}為整形值" returnType="int" typeName="格式轉換">
  <funcBody>
com.flagleader.util.NumberUtil.parseInt({string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="parseDouble(string)" disName="轉換{string}為浮點值" returnType="double" typeName="格式轉換">
  <funcBody>
com.flagleader.util.NumberUtil.parseDouble({string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="getNumberString(string)" disName="取{string}中純數字" returnType="string" typeName="數字處理">
  <funcBody>
com.flagleader.util.NumberUtil.getNumberString({string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="isNumber(string)" disName="判斷{string}是數字" returnType="boolean" typeName="合法校驗">
  <funcBody>
com.flagleader.util.NumberUtil.isNumber({string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="formatDouble(double,string)" disName="格式化{double},樣式為{string}" returnType="string" typeName="格式轉換">
  <funcBody>
com.flagleader.util.NumberUtil.formatDouble({double},{string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="replaceAll(string,string,string)" disName="將{string}中的{string}全部替換成{string}" returnType="string" typeName="字符處理">
  <funcBody>
com.flagleader.util.StringUtil.replaceAll({string},{string},{string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="replacePunct(string)" disName="將{string}全角換成半角" returnType="string" typeName="字符處理">
  <funcBody>
com.flagleader.util.StringUtil.replacePunct({string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="stringToList(string,string,string)" disName="將{string}切成多項,其中類型為{string},切割符為{string}" returnType="list" typeName="字符切割">
  <funcBody>
com.flagleader.util.ListUtil.stringToList({string},{string},{string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="getNumber" disName="將{string}按{string}過慮" returnType="string" typeName="數字處理">
  <funcBody>
com.flagleader.util.GCPub.getNumber({string},{string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="d​​ecodeMoneyCn" disName="取{string}的小寫金額" returnType="string" typeName="數字處理">
  <funcBody>
com.flagleader.util.GCPub.decodeMoneyCn({string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="isDatetime" disName="判斷{string}是否為合法日期" returnType="boolean" typeName="合法校驗">
  <funcBody>
com.flagleader.util.GCPub.isDatetime({string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="verify_Select" disName="是否{string}只選一項" returnType="boolean" typeName="合法校驗">
  <funcBody>
com.flagleader.util.GCPub.verify_Select({string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="Verify_ID_Legal" disName="判斷{string}是否為合法身份證" returnType="boolean" typeName="身份證">
  <funcBody>
com.flagleader.util.GCPub.Verify_ID_Legal({string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="sexFromLegal" disName="取{string}中的性別" returnType="string" typeName="身份證">
  <funcBody>
com.flagleader.util.GCPub.sexFromLegal({string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="d​​ateFromLegal" disName="取{string}中的生日" returnType="string" typeName="身份證">
  <funcBody>
com.flagleader.util.GCPub.dateFromLegal({string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="IsMulti" disName="判斷{string}是否多選" returnType="boolean" typeName="合法校驗">
  <funcBody>
com.flagleader.util.GCPub.IsMulti({string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="currentDate" disName="按{string}格式化當前時間" returnType="string" typeName="格式化">
  <funcBody>
com.flagleader.util.GCPub.currentDate({string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="stringValue(double)" disName="取{double}的字符串" returnType="string" typeName="格式轉換">
  <funcBody>
com.flagleader.util.StringUtil.stringValue({double}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="stringValue(int)" disName="取{int}的字符串" returnType="string" typeName="格式轉換">
  <funcBody>
com.flagleader.util.StringUtil.stringValue({int}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="format(string,string)" disName="將{string}按參數{string}格式化" returnType="string" typeName="格式化">
  <funcBody>
com.flagleader.util.GCPub.format({string},{string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="removeRelationByKey(string,string)" disName="去掉{string}的括號中的內容，除了包含{string}的除外" returnType="string" typeName="格式化">
  <funcBody>
com.flagleader.util.GCPub.removeRelationByKey({string},{string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="length(string}" disName="取{string}的長度" returnType="int" typeName="字符處理">
  <funcBody>
com.flagleader.util.StringUtil.length({string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="fullYear(string,string,string)" disName="計算從{string}到{string}的周歲，日期格式為{string}" returnType="int" typeName="日期計算">
  <funcBody>
com.flagleader.util.GCPub.fullYear({string},{string},{string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="d​​isdate(string,string,string)" disName="計算從{string}到{string}的天數，日期格式為{string}" returnType="int" typeName="日期計算">
  <funcBody>
com.flagleader.util.GCPub.disdate({string},{string},{string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="maxDate(date,date)" disName="取{date}和{date}中最大的日期" returnType="date" typeName="日期計算">
  <funcBody>
com.flagleader.util.DateUtil.maxDate({date},{date}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="formatDate(string,string,string)" disName="將日期{string}從{string}格式轉成{string}格式" returnType="string" typeName="格式化">
  <funcBody>
com.flagleader.util.GCPub.formatDate({string},{string},{string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="formatDate(date,string)" disName="將日期{date}按{string}格式化" returnType="string" typeName="格式化">
  <funcBody>
com.flagleader.util.GCPub.formatDate({date},{string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="isDatetime(string,string)" disName="判斷{arg1}是否為{arg2}格式的日期" returnType="boolean" typeName="日期計算">
  <funcBody>
com.flagleader.util.GCPub.isDatetime({string},{string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="leftPad(string,string,int)" disName="在{arg1}的左邊補上{arg2}，使其長度為{arg3}" returnType="string" typeName="格式化">
  <funcBody>
com.flagleader.util.GCPub.leftPad({string},{string},{int}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="replaceNotPunct(string)" disName="將{string}從半角轉成全角" returnType="string" typeName="格式化">
  <funcBody>
com.flagleader.util.StringUtil.replaceNotPunct({string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="rightPad(string,string,int)" disName="在{arg1}的右邊補上{arg2}，使其長度為{arg3}" returnType="string" typeName="格式化">
  <funcBody>
com.flagleader.util.GCPub.rightPad({string},{string},{int}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="compressDirectory(string,string)" disName="壓縮{string}目錄下所有文件到{string}中" returnType="void" typeName="文件處理">
  <funcBody>
com.flagleader.util.GCPub.compressDirectory({string},{string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="toLowerCase(string)" disName="取{arg1}的小寫值" returnType="string" typeName="格式化">
  <funcBody>
com.flagleader.util.StringUtil.toLowerCase({string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="toUpperCase(string)" disName="取{arg1}的大寫值" returnType="string" typeName="格式化">
  <funcBody>
com.flagleader.util.StringUtil.toUpperCase({string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="d​​eleteIllegalChar(string)" disName="刪除{arg1}中非法字符" returnType="string" typeName="格式化">
  <funcBody>
GCPub.deleteIllegalChar({string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="d​​rawAscii(string)" disName="去掉{arg1}中非可見的ASCII字符以及漢字" returnType="string" typeName="格式化">
  <funcBody>
GCPub.drawAscii({string}) </funcBody>
 </GlobalMethod>

<GlobalMethod funcName="DecimalUtil.div(double,double,int)" disName="精確相除{arg1}和{arg2}，精度為{arg3}" returnType="double" typeName="精確計算">
  <funcBody>
DecimalUtil.div({double},{double},{int}) </funcBody>
 </GlobalMethod>
<GlobalMethod funcName="DecimalUtil.round(double,int)" disName="四捨五入{arg1}，精度為{arg2}" returnType="double" typeName="精確計算">
  <funcBody>
DecimalUtil.round({double},{int}) </funcBody>
 </GlobalMethod>
 <TypeMethod funcName="length()" disName="$p的字數" returnType="string" typeName="格式化">
  <funcBody>
GCPub.tailBlankA({string},{int}) </funcBody>
 </TypeMethod>
 <GlobalMethod funcName="ToSBC(string}" disName="將{arg1}半角轉全角" returnType="string" typeName="精確計算">
  <funcBody>
DecimalUtil.div({double},{double}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="split(string,string)" disName="將{arg1}按{arg2}分割成字符數組" returnType="string[]" typeName="字符切割">
  <funcBody>
StringUtil.split({string},{string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="getByteLength(string)" disName="取{arg1}的字節長度" returnType="int" typeName="字符處理">
  <funcBody>
StringUtil.getByteLength({string}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="getByteLocation(string,int,int)" disName="計算{arg1}中從{arg2}位開始，字節長度為{arg3}字符串的截取位置" returnType="int" typeName="字符處理">
  <funcBody>
StringUtil.getByteLocation({string},{int},{int}) </funcBody>
 </GlobalMethod>
 <GlobalMethod funcName="indexOfString(string,string)" disName="計算{arg1}中{arg2}的所在位置" returnType="int" typeName="字符處理">
  <funcBody>
StringUtil.indexOfString({string},{stringr2>
</funcBody>
 </GlobalMethod>
 <TypeMethod funcName="indexOf(string)" disName="$p中{string}所在位置" returnType="int" typeName="string">
  <funcBody>
com.flagleader.util.StringUtil.indexOfString($p,{string}) </funcBody>
 </TypeMethod>
 <TypeMethod funcName="year()" disName="$p的年份" returnType="int" typeName="d​​ate">
  <funcBody>
DateUtil.year($p) </funcBody>
 </TypeMethod>
 <TypeMethod funcName="month" disName="$p的月份" returnType="int" typeName="d​​ate">
  <funcBody>
DateUtil.month($p) </funcBody>
 </TypeMethod>
</MethodInfos>